# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.19)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget SMCE::objSMCE SMCE::HostUDD SMCE::BindGenProxies SMCE::ipcSMCE SMCE::iSMCE SMCE::SMCE SMCE::SMCE_static)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target SMCE::objSMCE
add_library(SMCE::objSMCE INTERFACE IMPORTED)

set_target_properties(SMCE::objSMCE PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "SMCE::ipcSMCE;SMCE::HostUDD"
)

# Create imported target SMCE::HostUDD
add_library(SMCE::HostUDD INTERFACE IMPORTED)

set_target_properties(SMCE::HostUDD PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "SMCE::ipcSMCE;SMCE::BindGenProxies"
)

# Create imported target SMCE::BindGenProxies
add_library(SMCE::BindGenProxies INTERFACE IMPORTED)

set_target_properties(SMCE::BindGenProxies PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "SMCE::ipcSMCE"
)

# Create imported target SMCE::ipcSMCE
add_library(SMCE::ipcSMCE INTERFACE IMPORTED)

set_target_properties(SMCE::ipcSMCE PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SMCE_LIB_BUILD=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "SMCE::iSMCE"
)

# Create imported target SMCE::iSMCE
add_library(SMCE::iSMCE INTERFACE IMPORTED)

set_target_properties(SMCE::iSMCE PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "Threads::Threads"
)

# Create imported target SMCE::SMCE
add_library(SMCE::SMCE SHARED IMPORTED)

set_target_properties(SMCE::SMCE PROPERTIES
  COMPATIBLE_INTERFACE_STRING "SMCE_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "SMCE::iSMCE"
  INTERFACE_SMCE_MAJOR_VERSION "1"
)

# Create imported target SMCE::SMCE_static
add_library(SMCE::SMCE_static STATIC IMPORTED)

set_target_properties(SMCE::SMCE_static PROPERTIES
  COMPATIBLE_INTERFACE_STRING "SMCE_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/SMCE"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:SMCE::objSMCE>;\$<LINK_ONLY:SMCE::HostUDD>;\$<LINK_ONLY:SMCE::ipcSMCE>;\$<LINK_ONLY:SMCE::BindGenProxies>;SMCE::iSMCE"
  INTERFACE_SMCE_MAJOR_VERSION "1"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/SMCETargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
